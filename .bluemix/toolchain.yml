---
name: "Cloud-native Toolchain for Microservices (Cloud Insurance Co.)"
description: "With this cloud-native toolchain, you use a sample to create an online insurance store that consists of three microservices: a Catalog API, an Orders API, and a UI that calls both of the APIs. The toolchain is preconfigured for continuous delivery, source control, blue-green deployment, functional testing, issue tracking, online editing.\n\nTo get started, click **Create**."
version: 1.0
image: data:image/png;base64,$file(toolchain.png,base64)
required:
 - deploy

# Github repos
catalog-api-repo:
  service_id: githubpublic
  parameters:
    repo_name: "cloudco-insurance-catalog"
    repo_url: "https://github.com/IBM-Bluemix/insurance-catalog"
    type: clone
    has_issues: true

orders-api-repo:
  service_id: githubpublic
  parameters:
    repo_name: "cloudco-insurance-orders"
    repo_url: "https://github.com/IBM-Bluemix/insurance-orders"
    type: clone
    has_issues: true

ui-repo:
  service_id: githubpublic
  parameters:
    repo_name: "cloudco-insurance-bot"
    repo_url: "https://github.com/IBM-Bluemix/insurance-bot"
    type: clone
    has_issues: true

dashboard-repo:
  service_id: githubpublic
  parameters:
    repo_name: "cloudco-insurance-dashboard"
    repo_url: "https://github.com/IBM-Bluemix/insurance-bot-dashboard"
    type: clone
    has_issues: true

# Pipelines
ui-build-dev:
  service_id: pipeline
  parameters:
    name: "bot (dev)"
    configuration:
      content: $file(ui.pipeline.dev.yml)
      env:
        REPO: "ui-repo"
        CF_APP_NAME: "dev-{{deploy.parameters.ui-app-name}}"
        SPACE_NAME: "{{deploy.parameters.selected-space}}"
        ORG_NAME: "{{deploy.parameters.selected-organization}}"
        REGION_ID: "{{deploy.parameters.selected-region}}"
        CATALOG_APP_NAME: "dev-{{deploy.parameters.catalog-app-name}}"
        ORDERS_APP_NAME: "dev-{{deploy.parameters.orders-app-name}}"
      execute: true
    services: ["ui-repo"]
  hidden: [form, description]

ui-build-prod:
  service_id: pipeline
  parameters:
    name: "bot (prod)"
    configuration:
      content: $file(ui.pipeline.prod.yml)
      env:
        REPO: "ui-repo"
        CF_APP_NAME: "{{deploy.parameters.ui-app-name}}"
        SPACE_NAME: "{{deploy.parameters.selected-space}}"
        ORG_NAME: "{{deploy.parameters.selected-organization}}"
        REGION_ID: "{{deploy.parameters.selected-region}}"
        CATALOG_APP_NAME: "{{deploy.parameters.catalog-app-name}}"
        ORDERS_APP_NAME: "{{deploy.parameters.orders-app-name}}"
      execute: true
    services: ["ui-repo"]
  hidden: [form, description]

catalog-api-build-dev:
  service_id: pipeline
  parameters:
    name: "catalog (dev)"
    configuration:
      content: $file(catalog-api.pipeline.dev.yml)
      env:
        REPO: "catalog-api-repo"
        CF_APP_NAME: "dev-{{deploy.parameters.catalog-app-name}}"
        SPACE_NAME: "{{deploy.parameters.selected-space}}"
        ORG_NAME: "{{deploy.parameters.selected-organization}}"
        REGION_ID: "{{deploy.parameters.selected-region}}"
      execute: true
    services: ["catalog-api-repo"]
  hidden: [form, description]

catalog-api-build-prod:
  service_id: pipeline
  parameters:
    name: "catalog (prod)"
    configuration:
      content: $file(catalog-api.pipeline.prod.yml)
      env:
        REPO: "catalog-api-repo"
        CF_APP_NAME: "{{deploy.parameters.catalog-app-name}}"
        SPACE_NAME: "{{deploy.parameters.selected-space}}"
        ORG_NAME: "{{deploy.parameters.selected-organization}}"
        REGION_ID: "{{deploy.parameters.selected-region}}"
      execute: true
    services: ["catalog-api-repo"]
  hidden: [form, description]

orders-api-build-dev:
  service_id: pipeline
  parameters:
    name: "orders (dev)"
    configuration:
      content: $file(order-api.pipeline.dev.yml)
      env:
        REPO: "orders-api-repo"
        CF_APP_NAME: "dev-{{deploy.parameters.orders-app-name}}"
        SPACE_NAME: "{{deploy.parameters.selected-space}}"
        ORG_NAME: "{{deploy.parameters.selected-organization}}"
        REGION_ID: "{{deploy.parameters.selected-region}}"
        CATALOG_APP_NAME: "dev-{{deploy.parameters.catalog-app-name}}"
      execute: true
    services: ["orders-api-repo"]
  hidden: [form, description]

orders-api-build-prod:
  service_id: pipeline
  parameters:
    name: "orders (prod)"
    configuration:
      content: $file(order-api.pipeline.prod.yml)
      env:
        REPO: "orders-api-repo"
        CF_APP_NAME: "{{deploy.parameters.orders-app-name}}"
        SPACE_NAME: "{{deploy.parameters.selected-space}}"
        ORG_NAME: "{{deploy.parameters.selected-organization}}"
        REGION_ID: "{{deploy.parameters.selected-region}}"
        CATALOG_APP_NAME: "{{deploy.parameters.catalog-app-name}}"
      execute: true
    services: ["orders-api-repo"]
  hidden: [form, description]

dashboard-build-dev:
  service_id: pipeline
  parameters:
    name: "dashboard (dev)"
    configuration:
      content: $file(dashboard.pipeline.dev.yml)
      env:
        REPO: "dashboard-repo"
        CF_APP_NAME: "dev-{{deploy.parameters.dashboard-app-name}}"
        SPACE_NAME: "{{deploy.parameters.selected-space}}"
        ORG_NAME: "{{deploy.parameters.selected-organization}}"
        REGION_ID: "{{deploy.parameters.selected-region}}"
        UI_APP_NAME: "dev-{{deploy.parameters.ui-app-name}}"
      execute: true
    services: ["dashboard-repo"]
  hidden: [form, description]

dashboard-build-prod:
  service_id: pipeline
  parameters:
    name: "dashboard (prod)"
    configuration:
      content: $file(dashboard.pipeline.prod.yml)
      env:
        REPO: "dashboard-repo"
        CF_APP_NAME: "{{deploy.parameters.dashboard-app-name}}"
        SPACE_NAME: "{{deploy.parameters.selected-space}}"
        ORG_NAME: "{{deploy.parameters.selected-organization}}"
        REGION_ID: "{{deploy.parameters.selected-region}}"
        UI_APP_NAME: "{{deploy.parameters.ui-app-name}}"
      execute: true
    services: ["dashboard-repo"]
  hidden: [form, description]

#Web IDE
webide:
  service_id: orion

#Deployment
deploy:
  schema: deploy.json
  service-category: pipeline
  parameters:
    selected-region: "{{region}}"
    selected-organization: "{{organization}}"
    selected-space: "{{space}}"
    orders-app-name: "{{name}}-orders"
    catalog-app-name: "{{name}}-catalog"
    ui-app-name: "{{name}}-webui"
    dashboard-app-name: "{{name}}-dashboard"
